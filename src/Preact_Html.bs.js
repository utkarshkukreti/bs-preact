// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Preact_Core from "./Preact_Core.bs.js";

function a(param, param$1) {
  return Preact_Core.element("a", param, param$1);
}

function abbr(param, param$1) {
  return Preact_Core.element("abbr", param, param$1);
}

function address(param, param$1) {
  return Preact_Core.element("address", param, param$1);
}

function area(param, param$1) {
  return Preact_Core.element("area", param, param$1);
}

function article(param, param$1) {
  return Preact_Core.element("article", param, param$1);
}

function aside(param, param$1) {
  return Preact_Core.element("aside", param, param$1);
}

function audio(param, param$1) {
  return Preact_Core.element("audio", param, param$1);
}

function b(param, param$1) {
  return Preact_Core.element("b", param, param$1);
}

function base(param, param$1) {
  return Preact_Core.element("base", param, param$1);
}

function bdi(param, param$1) {
  return Preact_Core.element("bdi", param, param$1);
}

function bdo(param, param$1) {
  return Preact_Core.element("bdo", param, param$1);
}

function blockquote(param, param$1) {
  return Preact_Core.element("blockquote", param, param$1);
}

function body(param, param$1) {
  return Preact_Core.element("body", param, param$1);
}

function br(param, param$1) {
  return Preact_Core.element("br", param, param$1);
}

function button(param, param$1) {
  return Preact_Core.element("button", param, param$1);
}

function canvas(param, param$1) {
  return Preact_Core.element("canvas", param, param$1);
}

function caption(param, param$1) {
  return Preact_Core.element("caption", param, param$1);
}

function cite(param, param$1) {
  return Preact_Core.element("cite", param, param$1);
}

function code(param, param$1) {
  return Preact_Core.element("code", param, param$1);
}

function col(param, param$1) {
  return Preact_Core.element("col", param, param$1);
}

function colgroup(param, param$1) {
  return Preact_Core.element("colgroup", param, param$1);
}

function data$prime(param, param$1) {
  return Preact_Core.element("data", param, param$1);
}

function datalist(param, param$1) {
  return Preact_Core.element("datalist", param, param$1);
}

function dd(param, param$1) {
  return Preact_Core.element("dd", param, param$1);
}

function del(param, param$1) {
  return Preact_Core.element("del", param, param$1);
}

function details(param, param$1) {
  return Preact_Core.element("details", param, param$1);
}

function dfn(param, param$1) {
  return Preact_Core.element("dfn", param, param$1);
}

function dialog(param, param$1) {
  return Preact_Core.element("dialog", param, param$1);
}

function div(param, param$1) {
  return Preact_Core.element("div", param, param$1);
}

function dl(param, param$1) {
  return Preact_Core.element("dl", param, param$1);
}

function dt(param, param$1) {
  return Preact_Core.element("dt", param, param$1);
}

function em(param, param$1) {
  return Preact_Core.element("em", param, param$1);
}

function embed(param, param$1) {
  return Preact_Core.element("embed", param, param$1);
}

function fieldset(param, param$1) {
  return Preact_Core.element("fieldset", param, param$1);
}

function figcaption(param, param$1) {
  return Preact_Core.element("figcaption", param, param$1);
}

function figure(param, param$1) {
  return Preact_Core.element("figure", param, param$1);
}

function footer(param, param$1) {
  return Preact_Core.element("footer", param, param$1);
}

function form(param, param$1) {
  return Preact_Core.element("form", param, param$1);
}

function h1(param, param$1) {
  return Preact_Core.element("h1", param, param$1);
}

function h2(param, param$1) {
  return Preact_Core.element("h2", param, param$1);
}

function h3(param, param$1) {
  return Preact_Core.element("h3", param, param$1);
}

function h4(param, param$1) {
  return Preact_Core.element("h4", param, param$1);
}

function h5(param, param$1) {
  return Preact_Core.element("h5", param, param$1);
}

function h6(param, param$1) {
  return Preact_Core.element("h6", param, param$1);
}

function head(param, param$1) {
  return Preact_Core.element("head", param, param$1);
}

function header(param, param$1) {
  return Preact_Core.element("header", param, param$1);
}

function hgroup(param, param$1) {
  return Preact_Core.element("hgroup", param, param$1);
}

function hr(param, param$1) {
  return Preact_Core.element("hr", param, param$1);
}

function html(param, param$1) {
  return Preact_Core.element("html", param, param$1);
}

function i(param, param$1) {
  return Preact_Core.element("i", param, param$1);
}

function iframe(param, param$1) {
  return Preact_Core.element("iframe", param, param$1);
}

function img(param, param$1) {
  return Preact_Core.element("img", param, param$1);
}

function input(param, param$1) {
  return Preact_Core.element("input", param, param$1);
}

function ins(param, param$1) {
  return Preact_Core.element("ins", param, param$1);
}

function kbd(param, param$1) {
  return Preact_Core.element("kbd", param, param$1);
}

function label(param, param$1) {
  return Preact_Core.element("label", param, param$1);
}

function legend(param, param$1) {
  return Preact_Core.element("legend", param, param$1);
}

function li(param, param$1) {
  return Preact_Core.element("li", param, param$1);
}

function link(param, param$1) {
  return Preact_Core.element("link", param, param$1);
}

function main(param, param$1) {
  return Preact_Core.element("main", param, param$1);
}

function map(param, param$1) {
  return Preact_Core.element("map", param, param$1);
}

function mark(param, param$1) {
  return Preact_Core.element("mark", param, param$1);
}

function menu(param, param$1) {
  return Preact_Core.element("menu", param, param$1);
}

function meta(param, param$1) {
  return Preact_Core.element("meta", param, param$1);
}

function meter(param, param$1) {
  return Preact_Core.element("meter", param, param$1);
}

function nav(param, param$1) {
  return Preact_Core.element("nav", param, param$1);
}

function noscript(param, param$1) {
  return Preact_Core.element("noscript", param, param$1);
}

function object$prime(param, param$1) {
  return Preact_Core.element("object", param, param$1);
}

function ol(param, param$1) {
  return Preact_Core.element("ol", param, param$1);
}

function optgroup(param, param$1) {
  return Preact_Core.element("optgroup", param, param$1);
}

function option(param, param$1) {
  return Preact_Core.element("option", param, param$1);
}

function output(param, param$1) {
  return Preact_Core.element("output", param, param$1);
}

function p(param, param$1) {
  return Preact_Core.element("p", param, param$1);
}

function param(param$1, param$2) {
  return Preact_Core.element("param", param$1, param$2);
}

function picture(param, param$1) {
  return Preact_Core.element("picture", param, param$1);
}

function pre(param, param$1) {
  return Preact_Core.element("pre", param, param$1);
}

function progress(param, param$1) {
  return Preact_Core.element("progress", param, param$1);
}

function q(param, param$1) {
  return Preact_Core.element("q", param, param$1);
}

function rp(param, param$1) {
  return Preact_Core.element("rp", param, param$1);
}

function rt(param, param$1) {
  return Preact_Core.element("rt", param, param$1);
}

function ruby(param, param$1) {
  return Preact_Core.element("ruby", param, param$1);
}

function s(param, param$1) {
  return Preact_Core.element("s", param, param$1);
}

function samp(param, param$1) {
  return Preact_Core.element("samp", param, param$1);
}

function script(param, param$1) {
  return Preact_Core.element("script", param, param$1);
}

function section(param, param$1) {
  return Preact_Core.element("section", param, param$1);
}

function select(param, param$1) {
  return Preact_Core.element("select", param, param$1);
}

function slot(param, param$1) {
  return Preact_Core.element("slot", param, param$1);
}

function small(param, param$1) {
  return Preact_Core.element("small", param, param$1);
}

function source(param, param$1) {
  return Preact_Core.element("source", param, param$1);
}

function span(param, param$1) {
  return Preact_Core.element("span", param, param$1);
}

function strong(param, param$1) {
  return Preact_Core.element("strong", param, param$1);
}

function style$prime(param, param$1) {
  return Preact_Core.element("style", param, param$1);
}

function sub(param, param$1) {
  return Preact_Core.element("sub", param, param$1);
}

function summary(param, param$1) {
  return Preact_Core.element("summary", param, param$1);
}

function sup(param, param$1) {
  return Preact_Core.element("sup", param, param$1);
}

function table(param, param$1) {
  return Preact_Core.element("table", param, param$1);
}

function tbody(param, param$1) {
  return Preact_Core.element("tbody", param, param$1);
}

function td(param, param$1) {
  return Preact_Core.element("td", param, param$1);
}

function template(param, param$1) {
  return Preact_Core.element("template", param, param$1);
}

function textarea(param, param$1) {
  return Preact_Core.element("textarea", param, param$1);
}

function tfoot(param, param$1) {
  return Preact_Core.element("tfoot", param, param$1);
}

function th(param, param$1) {
  return Preact_Core.element("th", param, param$1);
}

function thead(param, param$1) {
  return Preact_Core.element("thead", param, param$1);
}

function time(param, param$1) {
  return Preact_Core.element("time", param, param$1);
}

function title(param, param$1) {
  return Preact_Core.element("title", param, param$1);
}

function tr(param, param$1) {
  return Preact_Core.element("tr", param, param$1);
}

function track(param, param$1) {
  return Preact_Core.element("track", param, param$1);
}

function u(param, param$1) {
  return Preact_Core.element("u", param, param$1);
}

function ul(param, param$1) {
  return Preact_Core.element("ul", param, param$1);
}

function $$var(param, param$1) {
  return Preact_Core.element("var", param, param$1);
}

function video(param, param$1) {
  return Preact_Core.element("video", param, param$1);
}

function wbr(param, param$1) {
  return Preact_Core.element("wbr", param, param$1);
}

function ref(value) {
  return Preact_Core.property("ref", (function (element) {
                return Curry._1(value, (element == null) ? undefined : Caml_option.some(element));
              }));
}

function abbr$prime(value) {
  return Preact_Core.property("abbr", value);
}

function accept(value) {
  return Preact_Core.property("accept", value);
}

function acceptCharset(value) {
  return Preact_Core.property("accept-charset", value);
}

function accesskey(value) {
  return Preact_Core.property("accesskey", value);
}

function action(value) {
  return Preact_Core.property("action", value);
}

function allow(value) {
  return Preact_Core.property("allow", value);
}

function allowfullscreen(value) {
  return Preact_Core.property("allowfullscreen", value);
}

function allowpaymentrequest(value) {
  return Preact_Core.property("allowpaymentrequest", value);
}

function alt(value) {
  return Preact_Core.property("alt", value);
}

function as$prime(value) {
  return Preact_Core.property("as", value);
}

function async(value) {
  return Preact_Core.property("async", value);
}

function autocapitalize(value) {
  return Preact_Core.property("autocapitalize", value);
}

function autocomplete(value) {
  return Preact_Core.property("autocomplete", value);
}

function autofocus(value) {
  return Preact_Core.property("autofocus", value);
}

function autoplay(value) {
  return Preact_Core.property("autoplay", value);
}

function charset(value) {
  return Preact_Core.property("charset", value);
}

function checked(value) {
  return Preact_Core.property("checked", value);
}

function cite$prime(value) {
  return Preact_Core.property("cite", value);
}

function color(value) {
  return Preact_Core.property("color", value);
}

function cols(value) {
  return Preact_Core.property("cols", value);
}

function colspan(value) {
  return Preact_Core.property("colspan", value);
}

function content(value) {
  return Preact_Core.property("content", value);
}

function contenteditable(value) {
  return Preact_Core.property("contenteditable", value);
}

function controls(value) {
  return Preact_Core.property("controls", value);
}

function coords(value) {
  return Preact_Core.property("coords", value);
}

function crossorigin(value) {
  return Preact_Core.property("crossorigin", value);
}

function data$prime$prime(value) {
  return Preact_Core.property("data", value);
}

function datetime(value) {
  return Preact_Core.property("datetime", value);
}

function decoding(value) {
  return Preact_Core.property("decoding", value);
}

function $$default(value) {
  return Preact_Core.property("default", value);
}

function defer(value) {
  return Preact_Core.property("defer", value);
}

function dir(value) {
  return Preact_Core.property("dir", value);
}

function dirname(value) {
  return Preact_Core.property("dirname", value);
}

function disabled(value) {
  return Preact_Core.property("disabled", value);
}

function download(value) {
  return Preact_Core.property("download", value);
}

function draggable(value) {
  return Preact_Core.property("draggable", value);
}

function enctype(value) {
  return Preact_Core.property("enctype", value);
}

function enterkeyhint(value) {
  return Preact_Core.property("enterkeyhint", value);
}

function for$prime(value) {
  return Preact_Core.property("for", value);
}

function form$prime(value) {
  return Preact_Core.property("form", value);
}

function formaction(value) {
  return Preact_Core.property("formaction", value);
}

function formenctype(value) {
  return Preact_Core.property("formenctype", value);
}

function formmethod(value) {
  return Preact_Core.property("formmethod", value);
}

function formnovalidate(value) {
  return Preact_Core.property("formnovalidate", value);
}

function formtarget(value) {
  return Preact_Core.property("formtarget", value);
}

function headers(value) {
  return Preact_Core.property("headers", value);
}

function height(value) {
  return Preact_Core.property("height", value);
}

function hidden(value) {
  return Preact_Core.property("hidden", value);
}

function high(value) {
  return Preact_Core.property("high", value);
}

function href(value) {
  return Preact_Core.property("href", value);
}

function hreflang(value) {
  return Preact_Core.property("hreflang", value);
}

function httpEquiv(value) {
  return Preact_Core.property("http-equiv", value);
}

function id(value) {
  return Preact_Core.property("id", value);
}

function inputmode(value) {
  return Preact_Core.property("inputmode", value);
}

function integrity(value) {
  return Preact_Core.property("integrity", value);
}

function is(value) {
  return Preact_Core.property("is", value);
}

function ismap(value) {
  return Preact_Core.property("ismap", value);
}

function itemid(value) {
  return Preact_Core.property("itemid", value);
}

function itemprop(value) {
  return Preact_Core.property("itemprop", value);
}

function itemref(value) {
  return Preact_Core.property("itemref", value);
}

function itemscope(value) {
  return Preact_Core.property("itemscope", value);
}

function itemtype(value) {
  return Preact_Core.property("itemtype", value);
}

function kind(value) {
  return Preact_Core.property("kind", value);
}

function label$prime(value) {
  return Preact_Core.property("label", value);
}

function lang(value) {
  return Preact_Core.property("lang", value);
}

function list(value) {
  return Preact_Core.property("list", value);
}

function loop(value) {
  return Preact_Core.property("loop", value);
}

function low(value) {
  return Preact_Core.property("low", value);
}

function manifest(value) {
  return Preact_Core.property("manifest", value);
}

function max(value) {
  return Preact_Core.property("max", value);
}

function maxlength(value) {
  return Preact_Core.property("maxlength", value);
}

function media(value) {
  return Preact_Core.property("media", value);
}

function method$prime(value) {
  return Preact_Core.property("method", value);
}

function min(value) {
  return Preact_Core.property("min", value);
}

function minlength(value) {
  return Preact_Core.property("minlength", value);
}

function multiple(value) {
  return Preact_Core.property("multiple", value);
}

function muted(value) {
  return Preact_Core.property("muted", value);
}

function name(value) {
  return Preact_Core.property("name", value);
}

function nomodule(value) {
  return Preact_Core.property("nomodule", value);
}

function nonce(value) {
  return Preact_Core.property("nonce", value);
}

function novalidate(value) {
  return Preact_Core.property("novalidate", value);
}

function open$prime(value) {
  return Preact_Core.property("open", value);
}

function optimum(value) {
  return Preact_Core.property("optimum", value);
}

function pattern(value) {
  return Preact_Core.property("pattern", value);
}

function ping(value) {
  return Preact_Core.property("ping", value);
}

function placeholder(value) {
  return Preact_Core.property("placeholder", value);
}

function playsinline(value) {
  return Preact_Core.property("playsinline", value);
}

function poster(value) {
  return Preact_Core.property("poster", value);
}

function preload(value) {
  return Preact_Core.property("preload", value);
}

function readonly(value) {
  return Preact_Core.property("readonly", value);
}

function referrerpolicy(value) {
  return Preact_Core.property("referrerpolicy", value);
}

function rel(value) {
  return Preact_Core.property("rel", value);
}

function required(value) {
  return Preact_Core.property("required", value);
}

function reversed(value) {
  return Preact_Core.property("reversed", value);
}

function rows(value) {
  return Preact_Core.property("rows", value);
}

function rowspan(value) {
  return Preact_Core.property("rowspan", value);
}

function sandbox(value) {
  return Preact_Core.property("sandbox", value);
}

function scope(value) {
  return Preact_Core.property("scope", value);
}

function selected(value) {
  return Preact_Core.property("selected", value);
}

function shape(value) {
  return Preact_Core.property("shape", value);
}

function size(value) {
  return Preact_Core.property("size", value);
}

function sizes(value) {
  return Preact_Core.property("sizes", value);
}

function slot$prime(value) {
  return Preact_Core.property("slot", value);
}

function span$prime(value) {
  return Preact_Core.property("span", value);
}

function spellcheck(value) {
  return Preact_Core.property("spellcheck", value);
}

function src(value) {
  return Preact_Core.property("src", value);
}

function srcdoc(value) {
  return Preact_Core.property("srcdoc", value);
}

function srclang(value) {
  return Preact_Core.property("srclang", value);
}

function srcset(value) {
  return Preact_Core.property("srcset", value);
}

function start(value) {
  return Preact_Core.property("start", value);
}

function step(value) {
  return Preact_Core.property("step", value);
}

function tabindex(value) {
  return Preact_Core.property("tabindex", value);
}

function target(value) {
  return Preact_Core.property("target", value);
}

function title$prime(value) {
  return Preact_Core.property("title", value);
}

function translate(value) {
  return Preact_Core.property("translate", value);
}

function type$prime(value) {
  return Preact_Core.property("type", value);
}

function typemustmatch(value) {
  return Preact_Core.property("typemustmatch", value);
}

function usemap(value) {
  return Preact_Core.property("usemap", value);
}

function value(value$1) {
  return Preact_Core.property("value", value$1);
}

function width(value) {
  return Preact_Core.property("width", value);
}

function wrap(value) {
  return Preact_Core.property("wrap", value);
}

function onAnimationEnd(handler) {
  return Preact_Core.on("animationend", Curry.__1(handler));
}

function onAnimationIteration(handler) {
  return Preact_Core.on("animationiteration", Curry.__1(handler));
}

function onAnimationStart(handler) {
  return Preact_Core.on("animationstart", Curry.__1(handler));
}

function onCopy(handler) {
  return Preact_Core.on("copy", Curry.__1(handler));
}

function onCut(handler) {
  return Preact_Core.on("cut", Curry.__1(handler));
}

function onPaste(handler) {
  return Preact_Core.on("paste", Curry.__1(handler));
}

function onCompositionEnd(handler) {
  return Preact_Core.on("compositionend", Curry.__1(handler));
}

function onCompositionStart(handler) {
  return Preact_Core.on("compositionstart", Curry.__1(handler));
}

function onCompositionUpdate(handler) {
  return Preact_Core.on("compositionupdate", Curry.__1(handler));
}

function onDrag(handler) {
  return Preact_Core.on("drag", Curry.__1(handler));
}

function onDragEnd(handler) {
  return Preact_Core.on("dragend", Curry.__1(handler));
}

function onDragEnter(handler) {
  return Preact_Core.on("dragenter", Curry.__1(handler));
}

function onDragExit(handler) {
  return Preact_Core.on("dragexit", Curry.__1(handler));
}

function onDragLeave(handler) {
  return Preact_Core.on("dragleave", Curry.__1(handler));
}

function onDragOver(handler) {
  return Preact_Core.on("dragover", Curry.__1(handler));
}

function onDragStart(handler) {
  return Preact_Core.on("dragstart", Curry.__1(handler));
}

function onDrop(handler) {
  return Preact_Core.on("drop", Curry.__1(handler));
}

function onAbort(handler) {
  return Preact_Core.on("abort", Curry.__1(handler));
}

function onCanPlay(handler) {
  return Preact_Core.on("canplay", Curry.__1(handler));
}

function onCanPlayThrough(handler) {
  return Preact_Core.on("canplaythrough", Curry.__1(handler));
}

function onChange(handler) {
  return Preact_Core.on("change", Curry.__1(handler));
}

function onDurationChange(handler) {
  return Preact_Core.on("durationchange", Curry.__1(handler));
}

function onEmptied(handler) {
  return Preact_Core.on("emptied", Curry.__1(handler));
}

function onEncrypted(handler) {
  return Preact_Core.on("encrypted", Curry.__1(handler));
}

function onEnded(handler) {
  return Preact_Core.on("ended", Curry.__1(handler));
}

function onError(handler) {
  return Preact_Core.on("error", Curry.__1(handler));
}

function onInput(handler) {
  return Preact_Core.on("input", Curry.__1(handler));
}

function onInvalid(handler) {
  return Preact_Core.on("invalid", Curry.__1(handler));
}

function onLoad(handler) {
  return Preact_Core.on("load", Curry.__1(handler));
}

function onLoadStart(handler) {
  return Preact_Core.on("loadstart", Curry.__1(handler));
}

function onLoadedData(handler) {
  return Preact_Core.on("loadeddata", Curry.__1(handler));
}

function onLoadedMetadata(handler) {
  return Preact_Core.on("loadedmetadata", Curry.__1(handler));
}

function onPause(handler) {
  return Preact_Core.on("pause", Curry.__1(handler));
}

function onPlay(handler) {
  return Preact_Core.on("play", Curry.__1(handler));
}

function onPlaying(handler) {
  return Preact_Core.on("playing", Curry.__1(handler));
}

function onProgress(handler) {
  return Preact_Core.on("progress", Curry.__1(handler));
}

function onRateChange(handler) {
  return Preact_Core.on("ratechange", Curry.__1(handler));
}

function onReset(handler) {
  return Preact_Core.on("reset", Curry.__1(handler));
}

function onSearch(handler) {
  return Preact_Core.on("search", Curry.__1(handler));
}

function onSeeked(handler) {
  return Preact_Core.on("seeked", Curry.__1(handler));
}

function onSeeking(handler) {
  return Preact_Core.on("seeking", Curry.__1(handler));
}

function onSelect(handler) {
  return Preact_Core.on("select", Curry.__1(handler));
}

function onStalled(handler) {
  return Preact_Core.on("stalled", Curry.__1(handler));
}

function onSubmit(handler) {
  return Preact_Core.on("submit", Curry.__1(handler));
}

function onSuspend(handler) {
  return Preact_Core.on("suspend", Curry.__1(handler));
}

function onTimeUpdate(handler) {
  return Preact_Core.on("timeupdate", Curry.__1(handler));
}

function onVolumeChange(handler) {
  return Preact_Core.on("volumechange", Curry.__1(handler));
}

function onWaiting(handler) {
  return Preact_Core.on("waiting", Curry.__1(handler));
}

function onBlur(handler) {
  return Preact_Core.on("blur", Curry.__1(handler));
}

function onFocus(handler) {
  return Preact_Core.on("focus", Curry.__1(handler));
}

function onKeyDown(handler) {
  return Preact_Core.on("keydown", Curry.__1(handler));
}

function onKeyPress(handler) {
  return Preact_Core.on("keypress", Curry.__1(handler));
}

function onKeyUp(handler) {
  return Preact_Core.on("keyup", Curry.__1(handler));
}

function onClick(handler) {
  return Preact_Core.on("click", Curry.__1(handler));
}

function onContextMenu(handler) {
  return Preact_Core.on("contextmenu", Curry.__1(handler));
}

function onDblClick(handler) {
  return Preact_Core.on("dblclick", Curry.__1(handler));
}

function onMouseDown(handler) {
  return Preact_Core.on("mousedown", Curry.__1(handler));
}

function onMouseEnter(handler) {
  return Preact_Core.on("mouseenter", Curry.__1(handler));
}

function onMouseLeave(handler) {
  return Preact_Core.on("mouseleave", Curry.__1(handler));
}

function onMouseMove(handler) {
  return Preact_Core.on("mousemove", Curry.__1(handler));
}

function onMouseOut(handler) {
  return Preact_Core.on("mouseout", Curry.__1(handler));
}

function onMouseOver(handler) {
  return Preact_Core.on("mouseover", Curry.__1(handler));
}

function onMouseUp(handler) {
  return Preact_Core.on("mouseup", Curry.__1(handler));
}

function onPointerCancel(handler) {
  return Preact_Core.on("pointercancel", Curry.__1(handler));
}

function onPointerDown(handler) {
  return Preact_Core.on("pointerdown", Curry.__1(handler));
}

function onPointerEnter(handler) {
  return Preact_Core.on("pointerenter", Curry.__1(handler));
}

function onPointerLeave(handler) {
  return Preact_Core.on("pointerleave", Curry.__1(handler));
}

function onPointerMove(handler) {
  return Preact_Core.on("pointermove", Curry.__1(handler));
}

function onPointerOut(handler) {
  return Preact_Core.on("pointerout", Curry.__1(handler));
}

function onPointerOver(handler) {
  return Preact_Core.on("pointerover", Curry.__1(handler));
}

function onPointerUp(handler) {
  return Preact_Core.on("pointerup", Curry.__1(handler));
}

function onTouchCancel(handler) {
  return Preact_Core.on("touchcancel", Curry.__1(handler));
}

function onTouchEnd(handler) {
  return Preact_Core.on("touchend", Curry.__1(handler));
}

function onTouchMove(handler) {
  return Preact_Core.on("touchmove", Curry.__1(handler));
}

function onTouchStart(handler) {
  return Preact_Core.on("touchstart", Curry.__1(handler));
}

function onTransitionEnd(handler) {
  return Preact_Core.on("transitionend", Curry.__1(handler));
}

function onScroll(handler) {
  return Preact_Core.on("scroll", Curry.__1(handler));
}

function onWheel(handler) {
  return Preact_Core.on("wheel", Curry.__1(handler));
}

function onInputValue(handler) {
  return Preact_Core.on("input", (function ($$event) {
                var $$event$1 = $$event;
                var match = $$event$1.target.value;
                if (match !== undefined) {
                  return Curry._1(handler, Caml_option.valFromOption(match));
                } else {
                  return Curry._1(handler, "");
                }
              }));
}

function onCheck(handler) {
  return Preact_Core.on("input", (function ($$event) {
                var $$event$1 = $$event;
                var match = $$event$1.target.checked;
                if (match !== undefined) {
                  return Curry._1(handler, Caml_option.valFromOption(match));
                } else {
                  return Curry._1(handler, false);
                }
              }));
}

export {
  a ,
  abbr ,
  address ,
  area ,
  article ,
  aside ,
  audio ,
  b ,
  base ,
  bdi ,
  bdo ,
  blockquote ,
  body ,
  br ,
  button ,
  canvas ,
  caption ,
  cite ,
  code ,
  col ,
  colgroup ,
  data$prime ,
  datalist ,
  dd ,
  del ,
  details ,
  dfn ,
  dialog ,
  div ,
  dl ,
  dt ,
  em ,
  embed ,
  fieldset ,
  figcaption ,
  figure ,
  footer ,
  form ,
  h1 ,
  h2 ,
  h3 ,
  h4 ,
  h5 ,
  h6 ,
  head ,
  header ,
  hgroup ,
  hr ,
  html ,
  i ,
  iframe ,
  img ,
  input ,
  ins ,
  kbd ,
  label ,
  legend ,
  li ,
  link ,
  main ,
  map ,
  mark ,
  menu ,
  meta ,
  meter ,
  nav ,
  noscript ,
  object$prime ,
  ol ,
  optgroup ,
  option ,
  output ,
  p ,
  param ,
  picture ,
  pre ,
  progress ,
  q ,
  rp ,
  rt ,
  ruby ,
  s ,
  samp ,
  script ,
  section ,
  select ,
  slot ,
  small ,
  source ,
  span ,
  strong ,
  style$prime ,
  sub ,
  summary ,
  sup ,
  table ,
  tbody ,
  td ,
  template ,
  textarea ,
  tfoot ,
  th ,
  thead ,
  time ,
  title ,
  tr ,
  track ,
  u ,
  ul ,
  $$var ,
  video ,
  wbr ,
  ref ,
  abbr$prime ,
  accept ,
  acceptCharset ,
  accesskey ,
  action ,
  allow ,
  allowfullscreen ,
  allowpaymentrequest ,
  alt ,
  as$prime ,
  async ,
  autocapitalize ,
  autocomplete ,
  autofocus ,
  autoplay ,
  charset ,
  checked ,
  cite$prime ,
  color ,
  cols ,
  colspan ,
  content ,
  contenteditable ,
  controls ,
  coords ,
  crossorigin ,
  data$prime$prime ,
  datetime ,
  decoding ,
  $$default ,
  $$default as default,
  defer ,
  dir ,
  dirname ,
  disabled ,
  download ,
  draggable ,
  enctype ,
  enterkeyhint ,
  for$prime ,
  form$prime ,
  formaction ,
  formenctype ,
  formmethod ,
  formnovalidate ,
  formtarget ,
  headers ,
  height ,
  hidden ,
  high ,
  href ,
  hreflang ,
  httpEquiv ,
  id ,
  inputmode ,
  integrity ,
  is ,
  ismap ,
  itemid ,
  itemprop ,
  itemref ,
  itemscope ,
  itemtype ,
  kind ,
  label$prime ,
  lang ,
  list ,
  loop ,
  low ,
  manifest ,
  max ,
  maxlength ,
  media ,
  method$prime ,
  min ,
  minlength ,
  multiple ,
  muted ,
  name ,
  nomodule ,
  nonce ,
  novalidate ,
  open$prime ,
  optimum ,
  pattern ,
  ping ,
  placeholder ,
  playsinline ,
  poster ,
  preload ,
  readonly ,
  referrerpolicy ,
  rel ,
  required ,
  reversed ,
  rows ,
  rowspan ,
  sandbox ,
  scope ,
  selected ,
  shape ,
  size ,
  sizes ,
  slot$prime ,
  span$prime ,
  spellcheck ,
  src ,
  srcdoc ,
  srclang ,
  srcset ,
  start ,
  step ,
  tabindex ,
  target ,
  title$prime ,
  translate ,
  type$prime ,
  typemustmatch ,
  usemap ,
  value ,
  width ,
  wrap ,
  onAnimationEnd ,
  onAnimationIteration ,
  onAnimationStart ,
  onCopy ,
  onCut ,
  onPaste ,
  onCompositionEnd ,
  onCompositionStart ,
  onCompositionUpdate ,
  onDrag ,
  onDragEnd ,
  onDragEnter ,
  onDragExit ,
  onDragLeave ,
  onDragOver ,
  onDragStart ,
  onDrop ,
  onAbort ,
  onCanPlay ,
  onCanPlayThrough ,
  onChange ,
  onDurationChange ,
  onEmptied ,
  onEncrypted ,
  onEnded ,
  onError ,
  onInput ,
  onInvalid ,
  onLoad ,
  onLoadStart ,
  onLoadedData ,
  onLoadedMetadata ,
  onPause ,
  onPlay ,
  onPlaying ,
  onProgress ,
  onRateChange ,
  onReset ,
  onSearch ,
  onSeeked ,
  onSeeking ,
  onSelect ,
  onStalled ,
  onSubmit ,
  onSuspend ,
  onTimeUpdate ,
  onVolumeChange ,
  onWaiting ,
  onBlur ,
  onFocus ,
  onKeyDown ,
  onKeyPress ,
  onKeyUp ,
  onClick ,
  onContextMenu ,
  onDblClick ,
  onMouseDown ,
  onMouseEnter ,
  onMouseLeave ,
  onMouseMove ,
  onMouseOut ,
  onMouseOver ,
  onMouseUp ,
  onPointerCancel ,
  onPointerDown ,
  onPointerEnter ,
  onPointerLeave ,
  onPointerMove ,
  onPointerOut ,
  onPointerOver ,
  onPointerUp ,
  onTouchCancel ,
  onTouchEnd ,
  onTouchMove ,
  onTouchStart ,
  onTransitionEnd ,
  onScroll ,
  onWheel ,
  onInputValue ,
  onCheck ,
  
}
/* Preact_Core Not a pure module */
