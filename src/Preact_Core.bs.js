// Generated by BUCKLESCRIPT VERSION 5.0.0, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Preact from "preact";
import * as Belt_List from "bs-platform/lib/es6/belt_List.js";
import * as Hooks from "preact/hooks";

var Internal = /* module */[];

var _0 = /* array */[];

function _1(a) {
  return /* array */[a];
}

function _2(a, b) {
  return /* array */[
          a,
          b
        ];
}

function _3(a, b, c) {
  return /* array */[
          a,
          b,
          c
        ];
}

function _4(a, b, c, d) {
  return /* array */[
          a,
          b,
          c,
          d
        ];
}

function _5(a, b, c, d, e) {
  return /* array */[
          a,
          b,
          c,
          d,
          e
        ];
}

function _6(a, b, c, d, e, f) {
  return /* array */[
          a,
          b,
          c,
          d,
          e,
          f
        ];
}

function _7(a, b, c, d, e, f, g) {
  return /* array */[
          a,
          b,
          c,
          d,
          e,
          f,
          g
        ];
}

function provide(context, value, vnode) {
  return Preact.createElement(context.Provider, {
              value: value
            }, /* array */[vnode]);
}

var Context = /* module */[/* provide */provide];

var Ref = /* module */[];

function useState(state, $$undefined) {
  return Hooks.useState((function (param) {
                return state;
              }), $$undefined);
}

function property(name, value) {
  return /* Property */Block.__(0, [
            name,
            value
          ]);
}

function on(name, value) {
  return /* Property */Block.__(0, [
            "on" + name,
            value
          ]);
}

function style(name, value) {
  return /* Style */Block.__(1, [
            name,
            value
          ]);
}

function class$prime(name) {
  return /* Class */Block.__(2, [name]);
}

function data(name, value) {
  return /* Property */Block.__(0, [
            "data-" + name,
            value
          ]);
}

function aria(name, value) {
  return /* Property */Block.__(0, [
            "aria-" + name,
            value
          ]);
}

function element(name, props, children) {
  var props$prime = { };
  var style = { };
  var hasStyle = /* record */[/* contents */false];
  var class$prime = /* record */[/* contents */""];
  Belt_List.forEach(props, (function (param) {
          switch (param.tag | 0) {
            case 0 : 
                props$prime[param[0]] = param[1];
                return /* () */0;
            case 1 : 
                hasStyle[0] = true;
                style[param[0]] = param[1];
                return /* () */0;
            case 2 : 
                var name = param[0];
                class$prime[0] = class$prime[0] === "" ? name : class$prime[0] + (" " + name);
                return /* () */0;
            
          }
        }));
  if (hasStyle[0]) {
    props$prime["style"] = style;
  }
  if (class$prime[0] !== "") {
    props$prime["class"] = class$prime[0];
  }
  var children$1 = Belt_List.toArray(children);
  return Preact.createElement(name, props$prime, children$1);
}

var fragment = Belt_List.toArray;

function component(name, fn) {
  var fn$1 = function (x) {
    return Curry._1(fn, x._);
  };
  fn$1.displayName = name;
  return (function (props) {
      return Preact.createElement(fn$1, {
                  _: props
                });
    });
}

export {
  Internal ,
  _0 ,
  _1 ,
  _2 ,
  _3 ,
  _4 ,
  _5 ,
  _6 ,
  _7 ,
  Context ,
  Ref ,
  useState ,
  property ,
  on ,
  style ,
  class$prime ,
  data ,
  aria ,
  element ,
  fragment ,
  component ,
  
}
/* preact Not a pure module */
